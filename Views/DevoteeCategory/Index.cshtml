@using Anandashram.Models;
@using Anandashram.Shared;
@model PaginatedList<DevoteeCategory>
@{
    ViewData["Title"] = "Devotee Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h4 style="text-align:left">Devotee Category</h4>
<br />
<p>
    <button asp-action="Create" type="button" class="fa fa fa-plus fa-2x" title="Add New" aria-hidden="true"></button>
</p>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="dashboard">
    <table class="table">
        <thead >
        <tr>
            <td>
                <form asp-action="Index">
                    <div class="d-flex">
                        <input class="form-control" placeholder="Search..." value="@ViewData["CurrentFilter"]" type="text"
                               autocomplete="off" name="SearchText" />
                    </div>
                </form>
            </td>
            <td class="right-align">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]" title="Previous" class="fa-solid fa-circle-arrow-left fa-2x @prevDisabled">
                    
                </a>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]" title="Next" class="fa-solid fa-circle-arrow-right fa-2x @nextDisabled">
                    
                </a>
            </td>
            </tr>
    </table>
    <table id="dcTable" class="table">
    <thead>
        <tr>
            <th></th>
            <th style="text-align: center;">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Name
                </a>
                   
            </th>
            <th style="text-align: center;">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                <tr id=@item.Id>
                    <td>@item.Id</td>
                    <td class="editable-name">@item.Name</td>
                    <td>
                        <button class="edit-btn fa fa-edit" title="Edit" style="border:none"></button>
                        <div class="edit-buttons">
                            <button class="update-btn fa fa-update">Update</button>
                            <button class="cancel-btn fa fa-cancel">Cancel</button>
                        </div>||
                        <button class="delete-btn fa fa-trash" style="border:none;"></button>
                    </td>
                </tr>
        }
    </tbody>
</table>
</div>


@section scripts {
    <script>
    $(document).ready(function () {
        
        // Inline Edit
        $('#dcTable').on('click', '.edit-btn', function () {
                
            var row = $(this).closest('tr');
                row.find('.editable').each(function () {
                        const value = $(this).text();
                        $(this).html(`<input type="text" value="${value}" />`);
                    });
            var name = row.find('.editable-name').text();
                alert("Name: " + name);
                row.find('.editable-name').html('<input type="text" class="edit-input-name" label="Update" value="' + name + '">');
                row.find('.edit-btn').hide();
                row.find('.edit-buttons').show();
        });

            $('#dcTable').on('click', '.save-btn', function () {
            var row = $(this).closest('tr');
            var id = row.data('id');
            var newName = row.find('.edit-input-name').val();
           

            $.ajax({
                url: '/DevoteeCategoy/UpdateDevoteeCategory', // Replace with your controller action
                type: 'POST',
                data: { id: id, name: newName },
                success: function (response) {
                    if (response.success) {
                        row.find('.editable-name').text(newName);
                        row.find('.save-btn').text('Edit').removeClass('save-btn').addClass('edit-btn');
                    } else {
                        alert('Error updating item.');
                    }
                }
            });
        });

        // Inline Delete
        $('#myTable').on('click', '.delete-btn', function () {
            if (confirm('Are you sure you want to delete this item?')) {
                var row = $(this).closest('tr');
                var id = row.data('id');

                $.ajax({
                    url: '/YourController/DeleteItem', // Replace with your controller action
                    type: 'POST', // Or DELETE if using RESTful conventions
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            row.remove(); // Remove row from UI
                        } else {
                            alert('Error deleting item.');
                        }
                    }
                });
            }
        });
    });
</script>


@* 
<script>
    $(document).ready(function () {
        alert("start");
        // Enable inline editing
        $('.editable').on('click', function () {
            if (!$(this).hasClass('editing')) {
                $(this).addClass('editing');
                var currentValue = $(this).text();
                $(this).html('<input type="text" value="' + currentValue + '" />');
                $(this).closest('tr').find('.save-btn').show();
            }
        });

        // Save changes
        $('.save-btn').on('click', function () {
            var row = $(this).closest('tr');
            var id = row.data('id');
            var updatedData = {
                Id: id,
                Name: row.find('[data-field="Name"] input').val()
            };

            $.ajax({
                url: '/DevoteeCategory/UpdateDevoteeCategory',
                type: 'POST',
                data: updatedData,
                success: function (response) {
                    if (response.success) {
                        row.find('.editable').each(function () {
                            var input = $(this).find('input');
                            $(this).removeClass('editing').text(input.val());
                        });
                        row.find('.save-btn').hide();
                        alert('Devotee Category updated successfully!');
                    } else {
                        alert(response.message || 'Error updating Devotee Category.');
                    }
                },
                error: function () {
                    alert('An error occurred while updating the Devotee Category.');
                }
            });
        });
    });
</script> *@
    }
